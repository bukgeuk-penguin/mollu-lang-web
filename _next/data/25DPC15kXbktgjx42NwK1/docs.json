{"pageProps":{"post":{"content":"<h1 id=\"몰랭\">몰?랭</h1>\n<p>이 프로젝트는 <a href=\"https://github.com/rycont/umjunsik-lang\">rycont/umjunsik-lang</a>에 영감을 받아 제작되었습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/41170492/153138216-0a212ade-dcbc-4cb0-81f7-76870fe3b5f4.gif\" alt=\"IMG_1831\"></p>\n<h1 id=\"구현체\">구현체</h1>\n<ul>\n<li><a href=\"https://github.com/bukgeuk-penguin/mollu-lang/tree/master/mollu-lang-cpp\">C++ 구현체</a></li>\n<li><a href=\"https://github.com/bukgeuk-penguin/mollu-lang/tree/master/mollu-lang-web\">웹 구현체</a> (<a href=\"https://www.npmjs.com/package/mollu-lang-web\">npm 패키지</a>)</li>\n</ul>\n<h1 id=\"문법\">문법</h1>\n<h2 id=\"자료형\">자료형</h2>\n<p>몰?랭에는 4가지 상수값이 있습니다</p>\n<ul>\n<li>몰루 : <strong><code>1</code></strong></li>\n<li>아루 : <strong><code>-1</code></strong></li>\n<li>모올루 : <strong><code>10</code></strong></li>\n<li>아아루 : <strong><code>-10</code></strong></li>\n</ul>\n<h2 id=\"연산자\">연산자</h2>\n<p>사칙연산의 우선순위가 적용되지 않고 왼쪽부터 차례대로 계산됩니다</p>\n<ul>\n<li>덧셈 : <strong><code>?</code></strong></li>\n<li>곱셈 : <strong><code>??</code></strong></li>\n<li>뺄셈 : <strong><code>!</code></strong></li>\n<li>나눗셈 <strong><code>!!</code></strong></li>\n</ul>\n<pre><code>모올루??아아루 => -100  \n몰루?몰루!아루 => 3  \n</code></pre>\n<h2 id=\"변수\">변수</h2>\n<p>변수는 인덱싱을 통해 접근할 수 있으며, 변수의 기본값은 0입니다.</p>\n<h3 id=\"대입아루\">대입(아!루)</h3>\n<p><code>우</code>의 개수번째 변수에 키워드 뒤에 오는 값을 대입합니다.</p>\n<pre><code>아!루 몰루 => 0번째 변수에 1 대입\n아!루우 모올루 => 1번째 변수에 10 대입\n아!루우우 모올루??아루 => 2번째 변수에 -10 대입\n</code></pre>\n<h3 id=\"사용루\">사용(루)</h3>\n<p><code>우</code>의 개수번째 변수의 값을 불러옵니다.</p>\n<pre><code>루 => 0번째 변수\n루우 => 1번째 변수\n루우우 => 2번째 변수\n</code></pre>\n<h2 id=\"라벨\">라벨</h2>\n<h3 id=\"정의왜몰루\">정의(왜몰?루)</h3>\n<p>현재 위치를 <code>우</code>의 개수번째 라벨로 정의합니다.</p>\n<pre><code>왜몰?루 => 0번째 라벨 정의\n왜몰?루우 => 1번째 라벨 정의\n</code></pre>\n<h3 id=\"사용왜아루\">사용(왜아!루)</h3>\n<p><code>우</code>의 개수번째 라벨을 불러옵니다.\n라벨이 정의되어 있지 않으면 오류가 발생합니다.</p>\n<pre><code>왜아!루 => 0번째 라벨\n왜아!루우 => 1번째 라벨\n</code></pre>\n<h2 id=\"점프\">점프</h2>\n<h3 id=\"값--0\">값 == 0</h3>\n<p><strong><code>몰?루 (값) (라벨)</code></strong><br>\n값이 0일때 라벨로 이동합니다.</p>\n<h3 id=\"값--0-1\">값 &#x3C; 0</h3>\n<p><strong><code>모올?루 (값) (라벨)</code></strong><br>\n값이 0보다 작을 때 라벨로 이동합니다.</p>\n<h3 id=\"값--0-2\">값 > 0</h3>\n<p><strong><code>모오올?루 (값) (라벨)</code></strong><br>\n값이 0보다 클 때 라벨로 이동합니다.</p>\n<pre><code>왜몰?루 => 0번째 라벨 정의\n몰?루 몰루?아루 왜아!루 => 1+(-1)이 0이면 0번째 라벨로 이동\n아!루 모올루 => 0번째 변수에 10 대입\n모오올?루 루 왜아!루 => 0번째 변수의 값이 0보다 크면 0번째 라벨로 이동\n</code></pre>\n<h2 id=\"출력\">출력</h2>\n<h3 id=\"정수로-출력몰루\">정수로 출력(몰!루)</h3>\n<p>키워드 뒤에 있는 값을 정수로 출력합니다.</p>\n<h3 id=\"문자로-출력모올루\">문자로 출력(모올!루)</h3>\n<p>키워드 뒤에 있는 값을 문자로 출력합니다.</p>\n<pre><code>몰!루 모올루 => 10 출력\n모올!루 모올루??모올루 => d 출력\n</code></pre>\n<h2 id=\"입력\">입력</h2>\n<p>키워드 자체가 값으로 취급됩니다.</p>\n<h3 id=\"정수-입력받기아루\">정수 입력받기(아?루)</h3>\n<p>정수를 입력받습니다.</p>\n<h3 id=\"문자-입력받기아아루\">문자 입력받기(아아?루)</h3>\n<p>문자를 입력받습니다.<br>\n여러글자가 입력 됐을 경우,<br>\n맨앞 문자를 불러오며 다음에 문자 입력을 받을 때 그 다음 문자가 불러와집니다.</p>\n<pre><code>몰!루 아?루 => 입력받은 정수를 출력\n모올!루 아아?루 => 입력받은 문자를 출력\n\n모올!루 아아?루 모올!루 아아?루 모올!루 아아?루 => 만약 한번에 abc를 입력받았다면, abc를 출력함\n</code></pre>\n<h2 id=\"기타\">기타</h2>\n<ul>\n<li>확장자는 <strong><code>.mol</code></strong> 입니다. (6.02*10^23 아님 ㅡㅡ)</li>\n<li>위 키워드를 제외한 다른 텍스트는 무시합니다.</li>\n<li>모든 코드는 원라인으로 작성 가능합니다.</li>\n</ul>","md":"# 몰?랭\n\n이 프로젝트는 [rycont/umjunsik-lang](https://github.com/rycont/umjunsik-lang)에 영감을 받아 제작되었습니다.\n\n![IMG_1831](https://user-images.githubusercontent.com/41170492/153138216-0a212ade-dcbc-4cb0-81f7-76870fe3b5f4.gif)\n\n# 구현체\n* [C++ 구현체](https://github.com/bukgeuk-penguin/mollu-lang/tree/master/mollu-lang-cpp)\n* [웹 구현체](https://github.com/bukgeuk-penguin/mollu-lang/tree/master/mollu-lang-web) ([npm 패키지](https://www.npmjs.com/package/mollu-lang-web))\n\n# 문법\n## 자료형\n몰?랭에는 4가지 상수값이 있습니다\n* 몰루 : **`1`**\n* 아루 : **`-1`**\n* 모올루 : **`10`**\n* 아아루 : **`-10`**\n\n## 연산자\n사칙연산의 우선순위가 적용되지 않고 왼쪽부터 차례대로 계산됩니다\n* 덧셈 : **`?`**\n* 곱셈 : **`??`**\n* 뺄셈 : **`!`**\n* 나눗셈 **`!!`**\n```\n모올루??아아루 => -100  \n몰루?몰루!아루 => 3  \n```\n## 변수\n변수는 인덱싱을 통해 접근할 수 있으며, 변수의 기본값은 0입니다.\n### 대입(아!루)\n`우`의 개수번째 변수에 키워드 뒤에 오는 값을 대입합니다.\n```\n아!루 몰루 => 0번째 변수에 1 대입\n아!루우 모올루 => 1번째 변수에 10 대입\n아!루우우 모올루??아루 => 2번째 변수에 -10 대입\n```\n### 사용(루)\n`우`의 개수번째 변수의 값을 불러옵니다.\n```\n루 => 0번째 변수\n루우 => 1번째 변수\n루우우 => 2번째 변수\n```\n## 라벨\n### 정의(왜몰?루)\n현재 위치를 `우`의 개수번째 라벨로 정의합니다.\n```\n왜몰?루 => 0번째 라벨 정의\n왜몰?루우 => 1번째 라벨 정의\n```\n### 사용(왜아!루)\n`우`의 개수번째 라벨을 불러옵니다.\n라벨이 정의되어 있지 않으면 오류가 발생합니다.\n```\n왜아!루 => 0번째 라벨\n왜아!루우 => 1번째 라벨\n```\n## 점프\n### 값 == 0\n**`몰?루 (값) (라벨)`**  \n값이 0일때 라벨로 이동합니다.\n### 값 < 0\n**`모올?루 (값) (라벨)`**  \n값이 0보다 작을 때 라벨로 이동합니다.\n### 값 > 0\n**`모오올?루 (값) (라벨)`**  \n값이 0보다 클 때 라벨로 이동합니다.\n```\n왜몰?루 => 0번째 라벨 정의\n몰?루 몰루?아루 왜아!루 => 1+(-1)이 0이면 0번째 라벨로 이동\n아!루 모올루 => 0번째 변수에 10 대입\n모오올?루 루 왜아!루 => 0번째 변수의 값이 0보다 크면 0번째 라벨로 이동\n```\n## 출력\n### 정수로 출력(몰!루)\n키워드 뒤에 있는 값을 정수로 출력합니다.\n### 문자로 출력(모올!루)\n키워드 뒤에 있는 값을 문자로 출력합니다.\n```\n몰!루 모올루 => 10 출력\n모올!루 모올루??모올루 => d 출력\n```\n## 입력\n키워드 자체가 값으로 취급됩니다.\n### 정수 입력받기(아?루)\n정수를 입력받습니다.\n### 문자 입력받기(아아?루)\n문자를 입력받습니다.  \n여러글자가 입력 됐을 경우,  \n맨앞 문자를 불러오며 다음에 문자 입력을 받을 때 그 다음 문자가 불러와집니다.\n```\n몰!루 아?루 => 입력받은 정수를 출력\n모올!루 아아?루 => 입력받은 문자를 출력\n\n모올!루 아아?루 모올!루 아아?루 모올!루 아아?루 => 만약 한번에 abc를 입력받았다면, abc를 출력함\n```\n## 기타\n* 확장자는 **`.mol`** 입니다. (6.02\\*10^23 아님 ㅡㅡ)\n* 위 키워드를 제외한 다른 텍스트는 무시합니다.\n* 모든 코드는 원라인으로 작성 가능합니다.\n"}},"__N_SSG":true}